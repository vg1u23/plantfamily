#install packages
install.packages("taxize")
install.packages("readxl")  # Install package (if not installed)


#pipeline prep
#load packages
library(phyloseq)
library(dplyr)
library(taxize)
library(readxl)


#working direction
getwd()
#set the working directory to another one
setwd("C:/Users/vg1u23/OneDrive - University of Southampton/Desktop/PhD_Gschiel/Project/Project1_Bioinformatics/metadata_files/metadataperstudy")
#list files
list.files("C:/Users/vg1u23/OneDrive - University of Southampton/Desktop/PhD_Gschiel/Project/Project1_Bioinformatics/metadata_files/metadataperstudy")

#load the metadata file
metadata <- read_excel("PRJEB28955.xlsx")  # Load your file

# Function to get plant family from ITIS (or use db = "ncbi" for NCBI)
get_family <- function(species_name) {
  classification_info <- tryCatch(
    classification(species_name, db = "ncbi"), 
    error = function(e) return(NA)  # Return NA if species not found
  )
  
  if (!is.na(classification_info) && length(classification_info) > 0) {
    family <- classification_info[[1]] %>%
      filter(rank == "family") %>%
      pull(name)
    
    return(ifelse(length(family) > 0, family, NA))
  }
  return(NA)
}

# Apply function to the "plant species" column
metadata$plant_family <- sapply(metadata$`plant species`, get_family)
#check metadata file






code to read in multiple files within a folder:
# Install necessary packages
install.packages("taxize")
install.packages("readxl")
install.packages("writexl")
install.packages("dplyr")  # for pipe and filter
library(taxize)
library(readxl)
library(writexl)
library(dplyr)

# Set working directory to input folder
input_folder <- "C:/Users/vg1u23/OneDrive - University of Southampton/Desktop/PhD_Gschiel/Project/Project1_Bioinformatics/metadata_files/metadataperstudy"
output_folder <- file.path(input_folder, "Project_PlantFamily")
dir.create(output_folder, showWarnings = FALSE)

# Function to get plant family using NCBI
get_family <- function(species_name) {
  classification_info <- tryCatch(
    classification(species_name, db = "ncbi"), 
    error = function(e) return(NA)
  )
  
  if (!is.na(classification_info) && length(classification_info) > 0) {
    family <- classification_info[[1]] %>%
      filter(rank == "family") %>%
      pull(name)
    
    return(ifelse(length(family) > 0, family, NA))
  }
  return(NA)
}

# Loop through all .xlsx files in the folder
xlsx_files <- list.files(path = input_folder, pattern = "\\.xlsx$", full.names = TRUE)

for (file in xlsx_files) {
  message("Processing: ", basename(file))
  metadata <- read_excel(file)
  
  # Only run if "plant species" column exists
  if ("plant_species" %in% colnames(metadata)) {
    metadata$plant_family <- sapply(metadata$`plant_species`, get_family)
    
    # Create new file path
    output_file <- file.path(output_folder, paste0(tools::file_path_sans_ext(basename(file)), "_with_family.xlsx"))
    
    # Save the result
    write_xlsx(metadata, output_file)
  } else {
    message("Skipping ", basename(file), ": 'plant species' column not found.")
  }
}

